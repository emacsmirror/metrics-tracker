* overview

  [[http://www.gnu.org/software/emacs/][emacs]] is a text editor.  an extensible one.  it is mainly used for
  coding, but it can also do anything else.  emacs includes a diary
  which can be used to keep track of which things were done on which
  days.

  [[https://github.com/ianxm/emacs-tracker][tracker.el]] adds to emacs the capability to generate tables and
  charts from the personal metrics data found in your diary entries.

  using tracker.el, you can track daily personal metrics using your
  emacs diary.  each metric is a count of something per day.  the
  point is to measure behaviors that you are trying to increase (like
  exercise) or decrease (like watching buffy the vampire slayer) so
  that you can see if you are making progress toward that goal.

  this is a port of [[https://github.com/ianxm/tracker][tracker]].

* usage

** entering metrics data

   metrics entries are regular diary entries so they can be created by
   updating the diary in the normal way, but diary entries that aren't
   in a certain format will be ignored by tracker.

   tip: consider using abbrev mode in diary mode and setting
   abbreviations for your metrics to save yourself a few keystrokes.

*** diary entry format

   emacs is very loose on diary entry formatting, but entries that
   tracker.el uses must look like:

#+BEGIN_SRC
   [date] [metric-name] [value]
#+END_SRC

   where,
   - date :: must be formatted as yyyy-mm-dd
   - metric-name :: is any string
   - value :: is a number (integer or decimal)

   tracker.el doesn't care about units.  value is just a number.  if
   you're tracking how much tv you watch, a "4" could mean four shows
   or four hours, it's up to you.

   you can set the default date format to yyyy-mm-dd with this line in
   your init file:

#+BEGIN_SRC
   (calendar-set-date-style 'iso)
#+END_SRC

** reporting

   tracker.el provides several ways to view the metrics data in your
   diary.

*** list

#+BEGIN_SRC
    M-x tracker-list
#+END_SRC

    this creates a table containing all of the metrics found in your
    emacs diary.  tracker write out a table containing the following
    columns:
    - metric :: the metric name
    - count :: the number of entries for this metric
    - first :: the date of the first entry
    - last :: the date of the last entry
    - days :: the number of days from "first" to "last"

    here's an example:

#+BEGIN_SRC org-mode
| metric        | count |      first |       last | days |
|---------------+-------+------------+------------+------|
| emacs-tracker |     9 | 2019-11-23 | 2019-12-10 |   18 |
| beer          |  1343 | 2012-02-13 | 2019-12-06 | 2854 |
| commute       |  1774 | 2006-05-22 | 2019-10-25 | 4905 |
#+END_SRC

    tracker.el will pick up any diary entries that match the format it
    is looking for, but that might pick up entries you don't want in
    your report. you can exclude specific metric names by adding them
    to the `tracker-metric-names-blacklist`. this custom variable
    takes a list of metric names.

*** table

#+BEGIN_SRC
    M-x tracker-table
#+END_SRC

    emacs will prompt for the following input parameters:
    - metric-name :: the metric name
    - date-grouping :: how many days to clump in each row. one of:
      - day
      - week
      - month
      - year
      - full
    - value-transform :: how to transform the data. one of:
      - total :: sum all of the values in the bin
      - count :: count entries in the bin
      - per-day :: divide the bin total by the number of days in the bin
      - per-week :: divide the bin total by the number of weeks in the bin
      - per-month :: divide the bin total by the number of months in the bin
      - per-year :: divide the bin total by the number of years in the bin

    this creates a table containing the transformed data for the
    requested metric.

    here's an example, showing the percentage of days of each year
    drinking a beer:

#+BEGIN_SRC org-mode
| year | beer percent |
|------+--------------|
| 2012 |         54.0 |
| 2013 |         48.2 |
| 2014 |         58.6 |
| 2015 |         59.5 |
| 2016 |         50.7 |
| 2017 |         39.5 |
| 2018 |         35.3 |
| 2019 |         30.3 |
#+END_SRC

*** graph

    the graph command depends on `gnuplot`, so gnuplot must be installed
    on your system and available on your `PATH`.

#+BEGIN_SRC
    M-x tracker-graph
#+END_SRC

    emacs will prompt for the same input parameters as in
    `tracker-table` above, as well as:
    - graph-type :: the type of graph to render. one of:
      - line
      - bar
      - scatter
    - graph-output :: display format for the graph. one of:
      - ascii
      - svg
      - png

    this is an example line graph rendered in ascii of average bike
    commute miles per week for each year:

#+BEGIN_SRC org-mode
:                                commute per week
:
:  45 +-+-++++-++++-++++-++++-++++-++++-++++-++++-++++-++++-++++-++++-+++++-+
:     +   +     +    +    +         +         +         +         +         +
:  40 +-++            +             +...                                  +-+
:     | +              +           .    .                                   |
:  35 +-+               +        ..      +                                +-+
:     |                  +      .         :                                 |
:  30 +-+                 +....+          :                               +-+
:     |                                    :           .+                   |
:     |                                     :        ..  :                  |
:  25 +-+                                    :    .+.     :               +-+
:     |                                      :  ..         :                |
:  20 +-+                                     +.           :              +-+
:     |                                                     :               |
:  15 +-+                                                    +....+....   +-+
:     +         +         +         +         +         +         +    +    +
:  10 +-+-++++-++++-++++-++++-++++-++++-++++-++++-++++-++++-++++-++++-+++++-+
:   2006      2008      2010      2012      2014      2016      2018      2020
:                                      year
#+END_SRC

    below is an example of the same data but this one shows the total
    for each week and renders it as a scatter plot written as a png
    image.

    [[./doc/commute_by_week.png]]

    the dimensions of the image can be set by modifying the variable
    `tracker-graph-size`.

*** cal

    todo

*** streaks

    todo

*** bursts

    todo

*** records

    todo
