* overview

  [[http://www.gnu.org/software/emacs/][emacs]] is a text editor.  an extensible one.  it is mainly used for
  coding, but it can also do anything else.  emacs includes a diary
  which you can use to keep track of which things you do on which
  days.

  [[https://github.com/ianxm/emacs-tracker][tracker.el]] gives emacs the capability to generate tables and charts
  from the personal metrics data found in your diary entries.

  using tracker.el, you can use your emacs diary to track daily
  personal metrics.  each metric is a count of something per day.  the
  point is to measure behaviors that you are trying to increase (like
  exercise) or decrease (like watching buffy the vampire slayer) so
  that you can see if you are making progress toward that goal.

  this is a port of [[https://github.com/ianxm/tracker][tracker]].

* usage

** entering metrics data

   metrics entries are regular diary entries so they can be created by
   updating the diary in the normal way, but diary entries that aren't
   in a certain format will be ignored by tracker.

   tip: consider using abbrev mode in diary mode and setting
   abbreviations for your metrics to save yourself a few keystrokes.

*** diary entry format

   emacs is very loose on diary entry formatting, but entries that
   tracker.el uses must look like:

#+BEGIN_SRC
   [date] [metric-name] [value]
#+END_SRC

   where,
   - date :: the date of a particular day.  although the emacs diary
             allows dates like "wednesday," which applies to all
             wednesdays, tracker.el only uses dates for specific days.
             examples of valid dates are:
             - ~2020-01-01~
             - ~1 Jan 2020~
             - ~Jan 1, 2020~
   - metric-name :: is any string.  it can be as long as you like and
                    can include spaces but keeping them short helps
                    with readability.
   - value :: is a number (integer or decimal).  tracker.el doesn't
              care about units.  ~value~ is just a number.  if you're
              tracking how much tv you watch, a "4" could mean 4 shows
              or 4 hours; it's up to you.

*** whitelist / blacklist

    by default tracker.el will pick up any diary entries that match
    the format it is looking for, which means it might pick up entries
    you don't want in your report.  if there are a few metrics that
    get picked up that you don't want to see, you can exclude them by
    adding them to ~tracker-metric-names-blacklist~.  this custom
    variable takes a list of metric names as a list of strings, such
    as:

#+BEGIN_SRC
   '("pushups" "situps")
#+end_SRC

    if tracker.el picks up lots of metrics that you don't want to see,
    you could instead whitelist the ones you want by adding them to
    the ~tracker-metric-names-whitelist~ custom variable.  this uses
    the same format as ~tracker-metric-names-blacklist~.  if you
    specify a whitelist, only those are considered and the blacklist
    is ignored.

** reporting

   tracker.el provides the following ways to view the metrics data in
   your diary.

*** list

#+BEGIN_SRC
    M-x tracker-list
#+END_SRC

    this creates a table containing all of the metrics found in your
    emacs diary.  tracker write out a table containing the following
    columns:
    - metric :: the metric name
    - count :: the number of entries for this metric
    - first :: the date of the first entry
    - last :: the date of the last entry
    - days :: the number of days from "first" to "last"

    here's an example:

#+BEGIN_SRC org-mode
| metric        | count |      first |       last | days |
|---------------+-------+------------+------------+------|
| emacs-tracker |     9 | 2019-11-23 | 2019-12-10 |   18 |
| beer          |  1343 | 2012-02-13 | 2019-12-06 | 2854 |
| commute       |  1774 | 2006-05-22 | 2019-10-25 | 4905 |
#+END_SRC

*** table

#+BEGIN_SRC
    M-x tracker-table
#+END_SRC

    emacs will prompt for the following input parameters:
    - metric-name :: the metric name
    - date-grouping :: how many days to clump in each row. one of:
      - day
      - week
      - month
      - year
      - full
    - value-transform :: how to transform the data. one of:
      - total :: sum all of the values in the bin
      - count :: count entries in the bin
      - per-day :: divide the bin total by the number of days in the bin
      - per-week :: divide the bin total by the number of weeks in the bin
      - per-month :: divide the bin total by the number of months in the bin
      - per-year :: divide the bin total by the number of years in the bin

    this creates a table containing the transformed data for the
    requested metric.

    here's an example, showing the percentage of days of each year
    drinking a beer:

#+BEGIN_SRC org-mode
| year | beer percent |
|------+--------------|
| 2012 |         54.0 |
| 2013 |         48.2 |
| 2014 |         58.6 |
| 2015 |         59.5 |
| 2016 |         50.7 |
| 2017 |         39.5 |
| 2018 |         35.3 |
| 2019 |         30.3 |
#+END_SRC

*** graph

    tracker.el can take the same table data and use it to generate a
    graph.  it uses gnuplot for graph generation, so gnuplot must be
    installed on your system and available on your PATH.  I tested
    with gnuplot 5.0.

#+BEGIN_SRC
    M-x tracker-graph
#+END_SRC

    emacs will prompt for the same input parameters as in
    ~tracker-table~ above, as well as:
    - graph-type :: the type of graph to render. one of:
      - line
      - bar
      - scatter
    - graph-output :: display format for the graph. one of:
      - ascii
      - svg
      - png

    this is an example line graph rendered in ascii of average bike
    commute miles per week for each year:

#+BEGIN_SRC org-mode
:                                commute per week
:
:  45 +-+-++++-++++-++++-++++-++++-++++-++++-++++-++++-++++-++++-++++-+++++-+
:     +   +     +    +    +         +         +         +         +         +
:  40 +-++            +             +...                                  +-+
:     | +              +           .    .                                   |
:  35 +-+               +        ..      +                                +-+
:     |                  +      .         :                                 |
:  30 +-+                 +....+          :                               +-+
:     |                                    :           .+                   |
:     |                                     :        ..  :                  |
:  25 +-+                                    :    .+.     :               +-+
:     |                                      :  ..         :                |
:  20 +-+                                     +.           :              +-+
:     |                                                     :               |
:  15 +-+                                                    +....+....   +-+
:     +         +         +         +         +         +         +    +    +
:  10 +-+-++++-++++-++++-++++-++++-++++-++++-++++-++++-++++-++++-++++-+++++-+
:   2006      2008      2010      2012      2014      2016      2018      2020
:                                      year
#+END_SRC

    below is an example of the same data but this one shows the total
    for each week and renders it as a scatter plot written as a png
    image.

    [[./doc/commute_by_week.png]]

    the dimensions of the image can be set by modifying the variable
    `tracker-graph-size`.

*** days since

#+BEGIN_SRC
    M-x tracker-days-since
#+END_SRC

    emacs will prompt for the following input parameters:
    - metric-name :: the metric name

    this reports how long ago the last occurence was of the specified
    metric.  the result is written to the minibuffer.

* todo
  - allow other diary formats
    - if no value, assume 1?
  - reports
    - cal
    - streaks
    - bursts
    - records
  - report with multiple metrics (accept formulas)
